select(country, gdp_growth_since_52) %>%
arrange(-gdp_growth_since_52)
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap) %>%
mutate(gdp_growth_since_52 = (year2007 - year1952)) %>%
select(country, gdp_growth_since_52) %>%
top_n(5, gdp_growth_since_52) %>%
arrange(-gdp_growth_since_52)
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria")
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap))+
geom_line()+
geom_point()
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth Over Time for the Top Five Gainers", x = "Year", y = "GDP Per Capita")
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth", x = "Year", y = "GDP Per Capita")
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth Over Time", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(continent, year) %>%
summarize(continent_gdppercap = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_gdppercap, group = continent, color = continent))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Over Time for Each Continent", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(country) %>%
summarize(across(contains("gdp"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
options(scipen = 999)
install.packages("gapminder")
library("gapminder")
glimpse(gapminder)
install.packages("gapminder")
summary(gapminder)
gapminder
gapminder %>%
summarize(n_country = n_distinct(country))
gapminder %>%
group_by(continent) %>%
summarize(n_country_continent = n_distinct(country))
gapminder %>%
group_by(continent) %>%
summarize(n_country_continent = n_distinct(country)) %>%
ggplot(aes(x = continent, y = n_country_continent))+
geom_col(color = "black", fill = "wheat")+
labs(title = "Countries per Continent", x = "Continent", y = "# of Countries")
gapminder %>%
select(country, year, pop) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = pop) %>%
mutate(change_since_52 = year2007 - year1952) %>%
select(country, change_since_52) %>%
arrange(-change_since_52)
gapminder %>%
filter(country == "China") %>%
mutate(year = as.factor(year)) %>%
ggplot(aes(x = year, y = pop))+
geom_col(color = "black", fill = "wheat")+
labs(title = "Population Growth of China", x = "Year", y = "Population")
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
group_by(continent, year) %>%
summarize(continent_lifeexp = mean(lifeExp, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_lifeexp, group = continent, color = continent))+
geom_line()+
geom_point()+
labs(title = "Life Expectancy Over Time for Each Continent", x = "Year", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap) %>%
mutate(gdp_growth_since_52 = (year2007 - year1952)) %>%
select(country, gdp_growth_since_52) %>%
top_n(5, gdp_growth_since_52) %>%
arrange(-gdp_growth_since_52)
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth Over Time", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(country) %>%
summarize(across(contains("gdp"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
group_by(continent, year) %>%
summarize(continent_gdppercap = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_gdppercap, group = continent, color = continent))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Over Time for Each Continent", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(continent) %>%
summarize(n_country_continent = n_distinct(country)) %>%
ggplot(aes(x = reorder(continent, n_country_continent), y = n_country_continent))+
geom_col(color = "black", fill = "wheat")+
labs(title = "Countries per Continent", x = "Continent", y = "# of Countries")
gapminder %>%
#group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
geom_abline()+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
geom_smooth(method = lm, se = T)+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
group_by(continent) %>%
summarize(across(contains("gdp"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
grizzly %>%
select(latitude, longitude) %>%
summary()
library(tidyverse)
library(janitor)
library(ggmap)
grizzly <- read_csv("data/bear-sightings.csv")
grizzly
grizzly %>%
select(latitude, longitude) %>%
summary()
grizzly_lat <- c(55.01, 70.37)
grizzly_long <- c(-166.2, -131.3)
grizzly_bbox <- make_bbox(grizzly_lat, grizzly_long, f = 0.05)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
grizzly_lat <- c(55.01, 70.37)
grizzly_long <- c(-166.2, -131.3)
grizzly_bbox <- make_bbox(grizzly_long, grizzly_lat, f = 0.05)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
register_stadiamaps("6da7cc70-898c-4b08-b9ad-b82362781fcd", write = FALSE)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
library(tidyverse)
library(janitor)
library(ggmap)
register_stadiamaps("6da7cc70-898c-4b08-b9ad-b82362781fcd", write = FALSE)
grizzly <- read_csv("data/bear-sightings.csv")
grizzly
grizzly %>%
select(latitude, longitude) %>%
summary()
grizzly_lat <- c(55.01, 70.37)
grizzly_long <- c(-166.2, -131.3)
grizzly_bbox <- make_bbox(grizzly_long, grizzly_lat, f = 0.05)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
register_stadiamaps("6da7cc70-898c-4b08-b9ad-b82362781fcd", write = FALSE)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
register_stadiamaps("6da7cc70-898c-4b08-b9ad-b82362781fcd", write = FALSE)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
register_stadiamaps("1d92513d-1a7f-407d-8c65-60d0d510c9c0", write = FALSE)
library(tidyverse)
library(janitor)
library(ggmap)
register_stadiamaps("1d92513d-1a7f-407d-8c65-60d0d510c9c0", write = FALSE)
grizzly <- read_csv("data/bear-sightings.csv")
grizzly
grizzly %>%
select(latitude, longitude) %>%
summary()
grizzly_lat <- c(55.01, 70.37)
grizzly_long <- c(-166.2, -131.3)
grizzly_bbox <- make_bbox(grizzly_long, grizzly_lat, f = 0.05)
grizzly_map <- get_map(grizzly_bbox, maptype = "stamen_terrain", zoom = 5)
map1 <- get_stadiamap(grizzly_bbox, maptype = "stamen_terrain", zoom=7)
library(tidyverse)
library(janitor)
library(ggmap)
register_stadiamaps("1d92513d-1a7f-407d-8c65-60d0d510c9c0", write = FALSE)
grizzly <- read_csv("data/bear-sightings.csv")
grizzly
grizzly %>%
select(latitude, longitude) %>%
summary()
grizzly_lat <- c(55.01, 70.37)
grizzly_long <- c(-166.2, -131.3)
grizzly_bbox <- make_bbox(grizzly_long, grizzly_lat, f = 0.05)
grizzly_map <- get_stadiamap(grizzly_bbox, maptype = "stamen_terrain", zoom=7)
ggmap(grizzly_map)
ggmap(grizzly_map) +
geom_point(data = grizzly, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Grizzly Bear Locations")
library(tidyverse)
library(janitor)
library(ggmap)
register_stadiamaps("1d92513d-1a7f-407d-8c65-60d0d510c9c0", write = FALSE)
grizzly <- read_csv("data/bear-sightings.csv")
grizzly
grizzly %>%
select(latitude, longitude) %>%
summary()
grizzly_lat <- c(55.01, 70.37)
grizzly_long <- c(-166.2, -131.3)
grizzly_bbox <- make_bbox(grizzly_long, grizzly_lat, f = 0.05)
grizzly_map <- get_stadiamap(grizzly_bbox, maptype = "stamen_terrain", zoom=5)
ggmap(grizzly_map)
ggmap(grizzly_map) +
geom_point(data = grizzly, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Grizzly Bear Locations")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(gtools)
tf <- read.csv("data/landscapegenetics/TF_pipits_2011.csv") %>% clean_names() #16 var
ps <- read.csv("data/landscapegenetics/PS_pipits_2016.csv") %>% clean_names() #15 var
tf_1 <- tf %>% select(!autocov1000m) #redefine tf as a different df
tf_ps <- merge(tf_1,ps, all=TRUE) #merge all data frames together
genomics <- read.csv("data/landscapegenetics/TF_PS_pipits.csv") %>% clean_names()
genomics_tf_ps <- merge(tf_ps, genomics, by = "sample")
options(scipen=999)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(malaria = if_else(malaria == "1", "Y", "N"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(age = if_else(age=="A", "adult", "juvenile")) #I spelled it right this time!
genomics_tf_ps <- genomics_tf_ps %>%
select(!utm)
#genomics_tf_ps <- genomics_tf_ps %>%
#  mutate(tlr4_het = if_else(tlr4_het == 0, "homozygous", "heterozygous"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(across(ends_with("het"), #if the var name ends with "het"
~if_else(.x==0, "homozygous", "heterozygous")))
# Check to see if it ends with 0 (homozygous). Otherwise, heterozygous.
# Should we consider shortening it to "homo" and "hetero"? Might be easier to read.
quartileswater <- quantcut(genomics_tf_ps$distwater)
table(quartileswater)
quartilesurban <- quantcut(genomics_tf_ps$dist_urb)
table(quartilesurban)
quartilesfarm <- quantcut(genomics_tf_ps$distfarm)
table(quartilesfarm)
quartilespoul <- quantcut(genomics_tf_ps$distpoul)
table(quartilespoul)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distwater_cat = case_when(distwater <= 105 ~ "close",
distwater > 105 & distwater <= 258 ~ "median close",
distwater > 258 & distwater <= 725 ~ "median far",
distwater > 725 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(disturb_cat = case_when(dist_urb <= 45 ~ "close",
dist_urb > 45 & dist_urb <= 108 ~ "median close",
dist_urb > 108 & dist_urb <= 282 ~ "median far",
dist_urb > 282 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distfarm_cat = case_when(distfarm <= 429 ~ "close",
distfarm > 429 & distfarm <= 723 ~ "median close",
distfarm > 723 & distfarm <= 1240 ~ "median far",
distfarm > 1240 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distpoul_cat = case_when(distpoul <= 860 ~ "close",
distpoul > 860 & distpoul <= 1830 ~ "median close",
distpoul> 1830 & distpoul <= 3410 ~ "median far",
distpoul > 3410 ~ "far"))
genomics_tf_ps %>%
select(sample, distwater_cat, distfarm_cat, disturb_cat, distpoul_cat)
genomics_tf_ps %>%
select(sample,)
write.csv(genomics_tf_ps, "data/landscapegenetics/genomics_tf_ps.csv", row.names = FALSE)
genomics_tf_ps %>%
select(sample, northing, westing)
genomics_tf_ps %>%
select(sample, northing, easting)
knitr::opts_chunk$set(echo = TRUE)
install.packages(sf)
library(tidyverse)
library(janitor)
library(gtools)
knitr::opts_chunk$set(echo = TRUE)
install.packages("sf")
library(tidyverse)
library(janitor)
library(gtools)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("sf")
library(tidyverse)
library(janitor)
library(gtools)
library(sf)
latlong <- st_as_sf(genomics_tf_ps, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
# Transform to lat/lon (EPSG:4326)
latlong <- st_transform(latlong, crs = 4326)
# Extract lat/lon and add back to dataframe
df <- df %>%
mutate(longitude = st_coordinates(latlong)[,1],
latitude = st_coordinates(latlong)[,2])
latlong <- st_as_sf(genomics_tf_ps, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
# Transform to lat/lon (EPSG:4326)
latlong <- st_transform(latlong, crs = 4326)
# Extract lat/lon and add back to dataframe
genomics_tf_ps <- genomics_tf_ps %>%
mutate(longitude = st_coordinates(latlong)[,1],
latitude = st_coordinates(latlong)[,2])
latlong <- st_as_sf(genomics_tf_ps, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
# Transform to lat/lon (EPSG:4326)
latlong <- st_transform(latlong, crs = 4326)
# Extract lat/lon and add back to dataframe
genomics_tf_ps <- genomics_tf_ps %>%
mutate(longitude = st_coordinates(latlong)[,1],
latitude = st_coordinates(latlong)[,2])
genomics_tf_ps
genomics_tf_ps %>%
select(latitude, longitude) %>%
summary()
latitude <- c(28.01, 33.1)
longitude <- c(-16.92, -16.18)
birds_bbox <- make_bbox(longitude, latitude, f = 0.05)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("sf")
library(tidyverse)
library(janitor)
library(gtools)
library(sf)
library(ggmap)
latitude <- c(28.01, 33.1)
longitude <- c(-16.92, -16.18)
birds_bbox <- make_bbox(longitude, latitude, f = 0.05)
birds_map <- get_stadiamap(birds_bbox, maptype = "stamen_terrain", zoom=5)
ggmap(birds_map)
birds_map <- get_stadiamap(birds_bbox, maptype = "stamen_terrain", zoom=10)
ggmap(birds_map)
ggmap(birds_map)+
geom_point(data = genomics_tf_ps, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations")
tf_latlong <- st_as_sf(tf, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
latlong <- st_transform(tf_latlong, crs = 4326)
tf <- tf %>%
mutate(longitude = st_coordinates(tf_latlong)[,1],
latitude = st_coordinates(tf_latlong)[,2])
tf
tf %>%
select(latitude, longitude) %>%
summary()
tf_latlong <- st_as_sf(tf, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
latlong <- st_transform(tf_latlong, crs = 4326)
tf <- tf %>%
mutate(longitude = st_coordinates(tf_latlong)[,1],
latitude = st_coordinates(tf_latlong)[,2])
tf
tf
tf_latlong <- st_as_sf(tf, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
tf_latlong <- st_transform(tf_latlong, crs = 4326)
tf <- tf %>%
mutate(longitude = st_coordinates(tf_latlong)[,1],
latitude = st_coordinates(tf_latlong)[,2])
tf
tf %>%
select(latitude, longitude) %>%
summary()
knitr::opts_chunk$set(echo = TRUE)
#install.packages("sf")
library(tidyverse)
library(janitor)
library(gtools)
library(sf)
library(ggmap)
tf <- read.csv("data/landscapegenetics/TF_pipits_2011.csv") %>% clean_names() #16 var
ps <- read.csv("data/landscapegenetics/PS_pipits_2016.csv") %>% clean_names() #15 var
tf_1 <- tf %>% select(!autocov1000m) #redefine tf as a different df
tf_ps <- merge(tf_1,ps, all=TRUE) #merge all data frames together
genomics <- read.csv("data/landscapegenetics/TF_PS_pipits.csv") %>% clean_names()
genomics_tf_ps <- merge(tf_ps, genomics, by = "sample")
options(scipen=999)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(malaria = if_else(malaria == "1", "Y", "N"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(age = if_else(age=="A", "adult", "juvenile")) #I spelled it right this time!
genomics_tf_ps <- genomics_tf_ps %>%
select(!utm)
#genomics_tf_ps <- genomics_tf_ps %>%
#  mutate(tlr4_het = if_else(tlr4_het == 0, "homozygous", "heterozygous"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(across(ends_with("het"), #if the var name ends with "het"
~if_else(.x==0, "homozygous", "heterozygous")))
# Check to see if it ends with 0 (homozygous). Otherwise, heterozygous.
# Should we consider shortening it to "homo" and "hetero"? Might be easier to read.
quartileswater <- quantcut(genomics_tf_ps$distwater)
table(quartileswater)
quartilesurban <- quantcut(genomics_tf_ps$dist_urb)
table(quartilesurban)
quartilesfarm <- quantcut(genomics_tf_ps$distfarm)
table(quartilesfarm)
quartilespoul <- quantcut(genomics_tf_ps$distpoul)
table(quartilespoul)
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distwater_cat = case_when(distwater <= 105 ~ "close",
distwater > 105 & distwater <= 258 ~ "median close",
distwater > 258 & distwater <= 725 ~ "median far",
distwater > 725 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(disturb_cat = case_when(dist_urb <= 45 ~ "close",
dist_urb > 45 & dist_urb <= 108 ~ "median close",
dist_urb > 108 & dist_urb <= 282 ~ "median far",
dist_urb > 282 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distfarm_cat = case_when(distfarm <= 429 ~ "close",
distfarm > 429 & distfarm <= 723 ~ "median close",
distfarm > 723 & distfarm <= 1240 ~ "median far",
distfarm > 1240 ~ "far"))
genomics_tf_ps <- genomics_tf_ps %>%
mutate(distpoul_cat = case_when(distpoul <= 860 ~ "close",
distpoul > 860 & distpoul <= 1830 ~ "median close",
distpoul> 1830 & distpoul <= 3410 ~ "median far",
distpoul > 3410 ~ "far"))
genomics_tf_ps %>%
select(sample, distwater_cat, distfarm_cat, disturb_cat, distpoul_cat)
tf
tf_latlong <- st_as_sf(tf, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
tf_latlong <- st_transform(tf_latlong, crs = 4326)
tf <- tf %>%
mutate(longitude = st_coordinates(tf_latlong)[,1],
latitude = st_coordinates(tf_latlong)[,2])
tf
tf %>%
select(latitude, longitude) %>%
summary()
latitude <- c(28.01, 28.58)
longitude <- c(-16.92, -16.18)
tf_bbox <- make_bbox(longitude, latitude, f = 0.05)
tf_map <- get_stadiamap(tf_bbox, maptype = "stamen_terrain", zoom=10)
ggmap(tf_map)+
geom_point(data = tf, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Tenerife")
write.csv(genomics_tf_ps, "data/landscapegenetics/genomics_tf_ps.csv", row.names = FALSE)
ps_latlong <- st_as_sf(ps, coords = c("easting", "northing"), crs = "+proj=utm +zone=28 +datum=WGS84 +units=m +north")
ps_latlong <- st_transform(ps_latlong, crs = 4326)
ps <- ps %>%
mutate(longitude = st_coordinates(ps_latlong)[,1],
latitude = st_coordinates(ps_latlong)[,2])
tf %>%
select(latitude, longitude) %>%
summary()
ps %>%
select(latitude, longitude) %>%
summary()
latitude <- c(33.03, 33.10)
longitude <- c(-16.39, -16.3)
ps_bbox <- make_bbox(longitude, latitude, f = 0.05)
ps_map <- get_stadiamap(ps_bbox, maptype = "stamen_terrain", zoom=10)
ggmap(ps_map)+
geom_point(data = ps, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Porto Santo")
latitude <- c(33.03, 33.10)
longitude <- c(-16.39, -16.3)
ps_bbox <- make_bbox(longitude, latitude, f = 0.05)
ps_map <- get_stadiamap(ps_bbox, maptype = "stamen_terrain", zoom=15)
ggmap(ps_map)+
geom_point(data = ps, aes(longitude, latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Porto Santo")
ggmap(ps_map)+
geom_point(data = ps, aes(longitude, latitude), size=1) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Porto Santo")
ggmap(tf_map)+
geom_point(data = tf, aes(longitude, latitude), size=1) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Tenerife")
latitude <- c(28.01, 28.58)
longitude <- c(-16.92, -16.18)
tf_bbox <- make_bbox(longitude, latitude, f = 0.05)
tf_map <- get_stadiamap(tf_bbox, maptype = "stamen_terrain", zoom=12)
ggmap(tf_map)+
geom_point(data = tf, aes(longitude, latitude), size=1) +
labs(x= "Longitude", y= "Latitude", title = "Bird Locations of Tenerife")
