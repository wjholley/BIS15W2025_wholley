values_from = pop) %>%
mutate(change_since_52 = year-2007 - year-1952)
gapminder %>%
select(country, year, pop) %>%
pivot_wider(names_from = year,
names_prefix = "year-",
values_from = pop) %>%
mutate(change_since_52 = "year-2007" - "year-1952")
gapminder %>%
select(country, year, pop) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = pop) %>%
mutate(change_since_52 = year2007 - year1952)
gapminder %>%
select(country, year, pop) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = pop) %>%
mutate(change_since_52 = year2007 - year1952) %>%
select(country, change_since_52) %>%
arrange(-change_since_52)
gapminder %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop))+
geom_col()
gapminder %>%
filter(country == "China") %>%
mutate(year = as.factor(year)) %>%
ggplot(aes(x = year, y = pop))+
geom_col()
gapminder %>%
filter(country == "China") %>%
mutate(year = as.factor(year)) %>%
ggplot(aes(x = year, y = pop))+
geom_col(color = "black", fill = "wheat")+
labs(title = "Population Growth of China", x = "Year", y = "Population")
gapminder %>%
pivot_wider(names_from = year,
values_from = lifeExp)
gapminder %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year,
values_from = lifeExp)
library(tidyverse)
library(janitor)
msleep <- msleep
clean_names(msleep)
dataexample <- read_csv("/data/dataexample.csv")
gapminder %>%
group_by(country) %>%
summarize(
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T, min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T, min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T)))))
library(tidyverse)
library(janitor)
msleep <- msleep
clean_names(msleep)
dataexample <- read_csv("/data/dataexample.csv")
library(tidyverse)
library(janitor)
msleep <- msleep
clean_names(msleep)
dataexample <- read_csv("/data/dataexample.csv")
msleep %>%
summarize(n_vore = n_distinct(vore, na.rm = T)) #tells us how many distinct entries there are for the vore column while also    excluding NAs
library(tidyverse)
library(janitor)
msleep <- msleep
clean_names(msleep)
#dataexample <- read_csv("/data/dataexample.csv")
glimpse(msleep)
summary(msleep)
msleep %>%
select(name, vore) #only displays the name and vore columns
msleep %>%
filter(vore == "carni") #filters all carnivores
msleep %>%
filter(vore != "carni") #filters out all carnivores
msleep %>%
filter(vore == "carni" | vore == "herbi") #filters all carnivores and herbivores
msleep %>%
filter(between(sleep_total, 10, 12)) #filters all animals that sleep between 10 and 12 hours total each day.
msleep %>%
count(vore)
msleep %>%
tabyl(vore)
msleep %>%
summarize(n_vore = n_distinct(vore, na.rm = T)) #tells us how many distinct entries there are for the vore column while also    excluding NAs
msleep %>%
group_by(vore) %>%
summarize(average_sleep_vore = mean(sleep_total, na.rm = T), n = n()) #this groups by vore and then calculates the mean sleep total and puts it into a new column called average_sleep_vore. It also displays the total n for each category using n = n().
msleep %>%
group_by(vore, conservation) %>%
summarize(average_bodywt_vore_conservation = mean(bodywt, na.rm = T), n = n())
msleep %>%
select(name, sleep_total) %>%
mutate(sleep_total_min = sleep_total * 60) #creates a new variable called sleep_total_min that converts sleep_total from hours   to minutes.
msleep %>%
select(name, sleep_total) %>%
mutate(sleep_designation = ifelse(10 < sleep_total, "lazy bum", "productive member of society"))
msleep %>%
arrange(-sleep_total) #arranges in descending order for sleep_total
msleep %>%
summarize(mean_sleep_total = mean(sleep_total, na.rm = T),
mean_body_wt = mean(bodywt, na.rm = T),
mean_brain_wt = mean(brainwt, na.rm = T), n = n()) #this is a lot
msleep %>%
summarize(across(c(sleep_total, bodywt, brainwt), \(x) mean(x, na.rm = T)))
msleep %>%
summarize(across(where(is.numeric), \(x) mean(x, na.rm = T))) #this calculates the mean of all numerics.
msleep %>%
summarize(across(contains("wt"), \(x) mean(x, na.rm = T))) #this calculates the mean of all variables that contain "wt" in them.
msleep %>%
summarize(across(contains("wt"), list(mean=\(x) mean(x, na.rm = T), sd=\(x) sd(x, na.rm = T)))) #gives us both the mean and standard deviation of variables containing "wt"
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T)))))
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
ggplot(x = continent, y = lifeExp)+
geom_line()
gapminder %>%
ggplot(aes(x = continent, y = lifeExp))+
geom_line()
library(tidyverse)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\", "-999"))
homerange %>%
ggplot(aes(x = reorder(class, log10.mass), y = log10.mass))+
geom_boxplot()+
labs(title = "log10 Mass vs Taxonomic Class", x = "Class", y = "log10 Mass")
homerange %>%
ggplot(aes(x = reorder(class, log10.mass), y = log10.mass, fill = class))+
geom_boxplot()+
labs(title = "log10 Mass vs Taxonomic Class", x = "Class", y = "log10 Mass")
homerange %>%
ggplot(aes(x = reorder(class, log10.mass), y = log10.mass, fill = taxon))+
geom_boxplot()+
labs(title = "log10 Mass vs Taxonomic Class", x = "Class", y = "log10 Mass")
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year = as.factor(year)) %>%
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
pivot_wider(names_from = species_id, values_from = n)
deserts %>%
filter(species_id == "DM" | species_id == "DS") %>%
mutate(year = as.factor(year)) %>%
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
ggplot(aes(x = year, y = n, group = species_id, color = species_id))+
geom_line()+
geom_point()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
homerange %>%
ggplot(aes(x = log10.mass))+
geom_histogram(bins = 50)
#colors()
homerange %>%
ggplot(aes(x = log10.mass))+
geom_histogram(color = "black", fill = "blue")
homerange %>%
ggplot(aes(x = log10.mass))+
geom_density(fill = "deepskyblue", alpha = 0.5) #alpha makes transparent
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.hra))+
geom_histogram(color = "black", fill = "wheat")+
labs(title = "Density of log10.hra")
homerange %>%
ggplot(aes(x = log10.hra))+
geom_density(color = "black", fill = "wheat")+
labs(title = "Density of log10.hra")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
summary(homerange$log10.mass)
#install.packages("gtools")
library(gtools)
quartiles <- quantcut(homerange$log10.mass)
table(quartiles)
homerange <- homerange %>%
mutate(mass_category = case_when(log10.mass <= 1.7 ~ "small",
log10.mass > 1.7 & log10.mass <= 3.33 ~ "median",
log10.mass > 3.33 ~ "large"))
homerange %>%
ggplot(aes(x = mass_category, fill = trophic.guild))+
geom_bar(position = "dodge")
quartiles1 <- quantcut(homerange$log10.hra)
table(quartiles1)
homerange <- homerange %>%
mutate(range_category = case_when(log10.hra <= 3.65 ~ "very small",
log10.hra > 3.65 & log10.hra <= 4.59 ~ "small",
log10.hra > 4.59 & log10.hra <= 6.02 ~ "medium",
log10.hra > 6.02 ~ "large"))
homerange %>%
ggplot(aes(x = range_category, fill = class))+
geom_bar(pos = "dodge", color = "black", alpha = 0.5)
homerange %>%
filter(range_category == "small") %>%
ggplot(aes(x = class, y = log10.mass, fill = class))+
geom_boxplot(alpha = 0.5)
gapminder %>%
ggplot(aes(x = continent, y = lifeExp, group = continent))+
geom_line()
deserts
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = continent))+
geom_line()
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(continent) %>%
summarize(continent_lifeexp = mean(lifeExp)) %>%
ggplot(aes(x = year, y = continent_lifeExp, group = continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(continent) %>%
summarize(continent_lifeexp = mean(lifeExp, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_lifeExp, group = continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(continent) %>%
summarize(continent_lifeexp = mean(lifeExp, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_lifeexp, group = continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(continent, year) %>%
summarize(continent_lifeexp = mean(lifeExp, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_lifeexp, group = continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(continent, year) %>%
summarize(continent_lifeexp = mean(lifeExp, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_lifeexp, group = continent, color = continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(continent, year) %>%
summarize(continent_lifeexp = mean(lifeExp, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_lifeexp, group = continent, color = continent))+
geom_line()+
geom_point()+
labs(title = "Life Expectancy Over Time for Each Continent", x = "Year", y = "Life Expectancy")
gapminder %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()
gapminder %>%
select(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")+
theme_classic()
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
#filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp, color = year))+
geom_point()+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp, color = year))+
geom_point()+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point(color = "wheat")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point(color = "skyblue", size = 2)+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap)
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap) %>%
mutate(gdp_growth_since_52 = (year2007 - year1952)) %>%
arrange(-gdp_growth_since_52)
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap) %>%
mutate(gdp_growth_since_52 = (year2007 - year1952)) %>%
select(country, gdp_growth_since_52)
arrange(-gdp_growth_since_52)
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap) %>%
mutate(gdp_growth_since_52 = (year2007 - year1952)) %>%
select(country, gdp_growth_since_52) %>%
arrange(-gdp_growth_since_52)
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap) %>%
mutate(gdp_growth_since_52 = (year2007 - year1952)) %>%
select(country, gdp_growth_since_52) %>%
top_n(5, gdp_growth_since_52) %>%
arrange(-gdp_growth_since_52)
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria")
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap))+
geom_line()+
geom_point()
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth Over Time for the Top Five Gainers", x = "Year", y = "GDP Per Capita")
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth", x = "Year", y = "GDP Per Capita")
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth Over Time", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(continent, year) %>%
summarize(continent_gdppercap = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_gdppercap, group = continent, color = continent))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Over Time for Each Continent", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(country) %>%
summarize(across(contains("gdp"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
options(scipen = 999)
install.packages("gapminder")
library("gapminder")
glimpse(gapminder)
install.packages("gapminder")
summary(gapminder)
gapminder
gapminder %>%
summarize(n_country = n_distinct(country))
gapminder %>%
group_by(continent) %>%
summarize(n_country_continent = n_distinct(country))
gapminder %>%
group_by(continent) %>%
summarize(n_country_continent = n_distinct(country)) %>%
ggplot(aes(x = continent, y = n_country_continent))+
geom_col(color = "black", fill = "wheat")+
labs(title = "Countries per Continent", x = "Continent", y = "# of Countries")
gapminder %>%
select(country, year, pop) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = pop) %>%
mutate(change_since_52 = year2007 - year1952) %>%
select(country, change_since_52) %>%
arrange(-change_since_52)
gapminder %>%
filter(country == "China") %>%
mutate(year = as.factor(year)) %>%
ggplot(aes(x = year, y = pop))+
geom_col(color = "black", fill = "wheat")+
labs(title = "Population Growth of China", x = "Year", y = "Population")
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
group_by(continent, year) %>%
summarize(continent_lifeexp = mean(lifeExp, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_lifeexp, group = continent, color = continent))+
geom_line()+
geom_point()+
labs(title = "Life Expectancy Over Time for Each Continent", x = "Year", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
select(country, year, gdpPercap) %>%
pivot_wider(names_from = year,
names_prefix = "year",
values_from = gdpPercap) %>%
mutate(gdp_growth_since_52 = (year2007 - year1952)) %>%
select(country, gdp_growth_since_52) %>%
top_n(5, gdp_growth_since_52) %>%
arrange(-gdp_growth_since_52)
gapminder %>%
filter(country == "Singapore" | country == "Norway" | country == "Hong Kong, China" | country == "Ireland" | country == "Austria") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Growth Over Time", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(country) %>%
summarize(across(contains("gdp"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
group_by(continent, year) %>%
summarize(continent_gdppercap = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = continent_gdppercap, group = continent, color = continent))+
geom_line()+
geom_point()+
labs(title = "GDP Per Capita Over Time for Each Continent", x = "Year", y = "GDP Per Capita")
gapminder %>%
group_by(continent) %>%
summarize(n_country_continent = n_distinct(country)) %>%
ggplot(aes(x = reorder(continent, n_country_continent), y = n_country_continent))+
geom_col(color = "black", fill = "wheat")+
labs(title = "Countries per Continent", x = "Continent", y = "# of Countries")
gapminder %>%
#group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
group_by(country) %>%
summarize(across(contains("life"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
geom_abline()+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
geom_smooth(method = lm, se = T)+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
filter(year == "2007") %>%
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_jitter(color = "skyblue")+
labs(title = "GDP Per Capita vs Life Expectancy", x = "GDP Per Capita", y = "Life Expectancy")
gapminder %>%
group_by(continent) %>%
summarize(across(contains("gdp"), list(mean = \(x) mean(x, na.rm = T), min = \(x) min(x, na.rm = T), max = \(x) max(x, na.rm = T))))
